


{
  "mainTitle": "Interfacing Arduino with Gas Sensor (MQ-2)",
  "metaDescription": "Detect LPG, smoke, and gases using MQ-2 sensor with Arduino. Ideal for fire and gas leakage detection projects.",
  "slug": "arduino-mq2-gas-sensor-interfacing",
  
  "intro": "Imagine your Arduino could sniff out danger‚Äîwell, with the MQ-2 gas sensor, it almost can! This powerful little sensor can detect gases like LPG, methane, smoke, and even alcohol in the air. In this hands-on project, you'll learn how to connect and use the MQ-2 sensor with an Arduino to create a basic gas detection system. Whether you're designing a smart kitchen safety alert or a classroom demo, this experiment blends electronics with real-world impact. So, let's dive in and give your Arduino a nose for safety!",
  "obj": "To detect gas concentration using an MQ-2 gas sensor connected to an Arduino.",
  "Theory1": {
    "title": "What is MQ-2 Gas Sensor?",
    "desc": "The MQ-2 is a gas sensor module capable of detecting LPG, propane, methane, alcohol, hydrogen, and smoke in the air."
  },
  "Theory2": {
    "title": "How Does It Work?",
    "desc": "The sensor contains a sensitive material (SnO2) whose conductivity increases in the presence of target gases. This change is converted into an analog output signal."
  },
  "Theory3": {
    "title": "Why Use It?",
    "desc": "Gas detection is essential for safety systems in homes, laboratories, and industrial setups to prevent fire hazards or gas leaks."
  },
  "Theory4": {
    "title": "Learning Outcome",
    "desc": "Learn how to wire, calibrate, and program an Arduino to detect hazardous gases using the MQ-2 sensor."
  },
  "title": "Components Required",
  "compRequired": [
    "Arduino Uno",
    "Breadboard",
    "MQ-2 Gas Sensor Module",
    "LED (Optional for alert indication)",
    "Buzzer (Optional for alarm)",
    "Resistor 220Œ© (for LED)",
    "Jumper Wires (Male-to-Male)",
    "USB Power Cable"
  ],
  "assemblySteps": [
  {
    "heading": "Place the MQ-2 Sensor on the Breadboard",
    "description": "Gently insert the MQ-2 sensor module onto the breadboard, ensuring it sits firmly but without forcing the pins. Keep some space around it for easy wiring.",
    "tip": "üí° The MQ-2 sensor can get warm during use ‚Äî so give it breathing space!"
  },
  {
    "heading": "Connect VCC Pin to 5V on Arduino",
    "description": "Using a red jumper wire, connect the VCC pin of the MQ-2 sensor module to the 5V pin on the Arduino. This powers the sensor.",
    "note": "‚ö†Ô∏è Double-check before powering up ‚Äî connecting VCC to GND by mistake can damage your module."
  },
  {
    "heading": "Connect GND Pin to Ground",
    "description": "Attach the GND pin of the sensor to any GND pin on the Arduino using a black jumper wire. This completes the power circuit.",
    "tip": "Use black for ground ‚Äî your future self will thank you during debugging!"
  },
  {
    "heading": "Connect the AO (Analog Output) Pin to Arduino A0",
    "description": "Use a jumper wire to connect the AO pin from the MQ-2 sensor to analog pin A0 on the Arduino. This pin sends gas level readings as analog values.",
    "note": "üìå You can also use the DO (digital output) pin if you prefer threshold-based triggering."
  },
  {
    "heading": "Add an LED or Buzzer (Optional)",
    "description": "To make your project more interactive, connect an LED with a 220Œ© resistor or a buzzer to any digital pin (like pin 8) for alert indication when gas is detected.",
    "tip": "üéØ Example: Connect LED anode to pin 8 through a resistor and cathode to GND."
  },
  {
    "heading": "Connect the Arduino to Your Computer",
    "description": "Plug your Arduino board into your computer using the USB cable. Ensure the board powers up and the sensor's onboard LED lights up.",
    "note": "If the sensor‚Äôs LED doesn't glow, double-check your VCC and GND connections."
  },
  {
    "heading": "Upload the Code via Arduino IDE",
    "description": "Open the Arduino IDE and upload the code that reads analog values from the MQ-2 sensor. Use `analogRead(A0)` and print values to the Serial Monitor.",
    "tip": "üìå Start with a simple threshold ‚Äî for example, trigger an alert if the analog value exceeds 300."
  },
  {
    "heading": "Sniff Test (Carefully!)",
    "description": "Bring a source of smoke or gas (like a lighter, without flame) close to the sensor. Watch the Serial Monitor and LED/buzzer to see if it detects anything.",
    "note": "‚ö†Ô∏è Never expose the sensor to open flame or strong chemicals directly!"
  }
  
],
"tip": "Place the MQ-2 sensor away from heat or flame sources during testing. It only needs the *vapors*, not a fire drill.",
"code": {
  "title": "Arduino Code for Gas Detection using MQ-2 Sensor",
  "language": "Arduino Code",
  "filename": "mq2_gas_detection.ino",
  "content": "// Interfacing MQ-2 Gas Sensor with Arduino\n// copyright by Sarkitshala.com\n\nconst int gasSensorPin = A0;   // Analog pin connected to MQ-2 AO pin\nconst int ledPin = 8;          // Optional LED for alert\nconst int buzzerPin = 9;       // Optional buzzer for alert\n\nint gasLevel = 0;\nint threshold = 300;           // Threshold value (can be adjusted)\n\nvoid setup() {\n  pinMode(ledPin, OUTPUT);\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  gasLevel = analogRead(gasSensorPin);\n  Serial.print(\"Gas Level: \");\n  Serial.println(gasLevel);\n\n  if (gasLevel > threshold) {\n    digitalWrite(ledPin, HIGH);\n    digitalWrite(buzzerPin, HIGH);\n    Serial.println(\"‚ö†Ô∏è Gas Detected!\");\n  } else {\n    digitalWrite(ledPin, LOW);\n    digitalWrite(buzzerPin, LOW);\n  }\n\n  delay(1000); // Read every 1 second\n}"
},


,
  "structuredData":""


}


// Interfacing Gas Flow Sensor Module with Arduino
// Interfacing Fingerprint Sensor Module with Arduino